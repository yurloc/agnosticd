---
- name: define ocp_project
  set_fact:
    ocp_project: "optaweb-vrp-{{guid}}"

- name: Create project for OptaPlanner Vehicle Routing Demo
  shell: |
    oc new-project {{ocp_project}} \
    --display-name="OptaPlanner Vehicle Routing Demo" \
    --description="OptaPlanner Vehicle Routing Demo"
  ignore_errors: true

- name: "Label namespace"
  command: "oc label namespace {{ocp_project}} AAD='{{guid}}'"

- name: "Create PostgreSQL database"
  shell: "oc new-app postgresql-persistent -n {{ocp_project}}"

- name: "Create OptaWeb app"
  shell: "oc new-app \
  --name optaweb-vehicle-routing quay.io/jlocker/optaweb-vehicle-routing \
  SPRING_PROFILES_ACTIVE=production \
  APP_ROUTING_ENGINE=graphhopper \
  APP_ROUTING_OSM_FILE=boston.osm.pbf \
  APP_REGION_COUNTRY_CODES=US \
  -n {{ocp_project}}"

- name: "Share PostgreSQL secret with OptaWeb app"
  shell: "oc set env deployment/optaweb-vehicle-routing --from=secret/postgresql -n {{ocp_project}}"

- name: "Remove emptyDir volume"
  shell: "oc set volumes deployment/optaweb-vehicle-routing \
  --remove \
  --name optaweb-vehicle-routing-volume-1 \
  -n {{ocp_project}}"

- name: "Set up OptaWeb PVC"
  shell: "oc set volumes deployment/optaweb-vehicle-routing \
  --add \
  --type=persistentVolumeClaim \
  --claim-name=optaweb-volume \
  --claim-mode=ReadWriteOnce \
  --claim-size=2Gi \
  --mount-path=local \
  -n {{ocp_project}}"

- name: "Expose OptaWeb service"
  shell: "oc expose svc/optaweb-vehicle-routing -n {{ocp_project}}"

#### Wait for the deployment to complete before slapping on the quota ...
- include_tasks: ./wait_for_deploy.yml
  vars:
    pod_to_wait:
      - optaweb-vehicle-routing

- name: Annotate the completed project as requested by user
  shell: "oc annotate namespace {{ocp_project}} openshift.io/requester={{ocp_username}} --overwrite"

- name: Give user access to the completed project
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{ocp_project}}"

- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete
